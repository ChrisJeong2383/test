{"ast":null,"code":"var _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\Chris Jeong\\\\cs262\\\\cs262\\\\lab05\\\\screens\\\\home.js\";\n\nfunction HomeScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState([{\n    title: \"Fellowship of the Ring\",\n    rating: 8.8,\n    key: '1',\n    description: \"Some hobbits begin a quest.\"\n  }, {\n    title: \"Two Towers\",\n    rating: 8.7,\n    key: '2',\n    description: 'Some dark lords try to take over the world.'\n  }, {\n    title: \"Return of the King\",\n    rating: 8.9,\n    key: '3',\n    description: 'The dark lords are defeated, to much rejoicing.'\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      reviews = _useState2[0],\n      setReviews = _useState2[1];\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: reviews,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('Details', item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }\n      }, item.title));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Chris Jeong/cs262/cs262/lab05/screens/home.js"],"names":["HomeScreen","navigation","useState","title","rating","key","description","reviews","setReviews","flex","padding","item","navigate"],"mappings":";;;;AAAA,SAASA,UAAT,OAAoC;AAAA;;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAGhC,kBAA8BC,QAAQ,CAAC,CACnC;AAAEC,IAAAA,KAAK,EAAE,wBAAT;AAAmCC,IAAAA,MAAM,EAAE,GAA3C;AAAgDC,IAAAA,GAAG,EAAE,GAArD;AACIC,IAAAA,WAAW,EAAE;AADjB,GADmC,EAGnC;AAAEH,IAAAA,KAAK,EAAE,YAAT;AAAuBC,IAAAA,MAAM,EAAE,GAA/B;AAAoCC,IAAAA,GAAG,EAAE,GAAzC;AACIC,IAAAA,WAAW,EAAE;AADjB,GAHmC,EAKnC;AAAEH,IAAAA,KAAK,EAAE,oBAAT;AAA+BC,IAAAA,MAAM,EAAE,GAAvC;AAA4CC,IAAAA,GAAG,EAAE,GAAjD;AACIC,IAAAA,WAAW,EAAE;AADjB,GALmC,CAAD,CAAtC;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AASA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,OAAO,EAAE;AAApB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEH,OAAhB;AAAyB,IAAA,UAAU,EAAE;AAAA,UAAGI,IAAH,SAAGA,IAAH;AAAA,aACjC,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE;AAAA,iBAAMV,UAAU,CAACW,QAAX,CAAoB,SAApB,EAA+BD,IAA/B,CAAN;AAAA,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQA,IAAI,CAACR,KAAb,CADJ,CADiC;AAAA,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAUH","sourcesContent":["function HomeScreen({ navigation }) {\r\n\r\n    /* Hardcode a \"database\"/list of movies. */\r\n    const [reviews, setReviews] = useState([\r\n        { title: \"Fellowship of the Ring\", rating: 8.8, key: '1',\r\n            description: \"Some hobbits begin a quest.\"},\r\n        { title: \"Two Towers\", rating: 8.7, key: '2',\r\n            description: 'Some dark lords try to take over the world.'},\r\n        { title: \"Return of the King\", rating: 8.9, key: '3',\r\n            description: 'The dark lords are defeated, to much rejoicing.'},\r\n    ]);\r\n\r\n    return (\r\n        <View style={{ flex: 1, padding: 20}}>\r\n            {/* Get rid of that ugly button and, instead, display our list of movies. */}\r\n            <FlatList data={reviews} renderItem={({ item })=> (\r\n                <TouchableOpacity onPress={() => navigation.navigate('Details', item)}>\r\n                    <Text>{ item.title }</Text>\r\n                </TouchableOpacity>\r\n            )} />\r\n        </View>\r\n    );\r\n}"]},"metadata":{},"sourceType":"script"}